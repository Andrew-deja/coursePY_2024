# TODO  Напишите функцию count_letters
def count_letters(text):
    str = text.lower() # делаем текст одного регистра
    alphabet = {} # создаем пустой словарь
    for letter in str: # заполняем его
        if letter.isalpha() and (letter in alphabet):
            alphabet[letter] += 1 # если это действительно буква и мы уже ее встречали, то увеличиваем значение
        elif letter.isalpha():
            alphabet[letter] = 1 # если это действительно буква, но встречаем в первый раз, то ее значение равно 1
    return alphabet

# TODO Напишите функцию calculate_frequency
def calculate_frequency(alphabet):
    count = 0
    for letter in alphabet.values():
        count += letter # считаем кол-во всех букв с помощью значений словаря

    alphabet_frequency = alphabet # создаем частостный словарь, пока он равен исходному
    for letter in alphabet_frequency:
        alphabet_frequency[letter] /= count # перезаписываем значения частотного словаря на новые
    return alphabet_frequency


main_str = """
У лукоморья дуб зелёный;
Златая цепь на дубе том:
И днём и ночью кот учёный
Всё ходит по цепи кругом;
Идёт направо — песнь заводит,
Налево — сказку говорит.
Там чудеса: там леший бродит,
Русалка на ветвях сидит;
Там на неведомых дорожках
Следы невиданных зверей;
Избушка там на курьих ножках
Стоит без окон, без дверей;
Там лес и дол видений полны;
Там о заре прихлынут волны
На брег песчаный и пустой,
И тридцать витязей прекрасных
Чредой из вод выходят ясных,
И с ними дядька их морской;
Там королевич мимоходом
Пленяет грозного царя;
Там в облаках перед народом
Через леса, через моря
Колдун несёт богатыря;
В темнице там царевна тужит,
А бурый волк ей верно служит;
Там ступа с Бабою Ягой
Идёт, бредёт сама собой,
Там царь Кащей над златом чахнет;
Там русский дух… там Русью пахнет!
И там я был, и мёд я пил;
У моря видел дуб зелёный;
Под ним сидел, и кот учёный
Свои мне сказки говорил.
"""

# TODO Распечатайте в столбик букву и её частоту в тексте
alphabet = count_letters(main_str) # создаем словарь с буквами и их кол-вом
freq_alphabet = calculate_frequency(alphabet) # создаем частотный словарь

for letter in freq_alphabet: # выводим значения словаря с точностью 2 знака после запятой
    print(f"{letter}: {freq_alphabet[letter]:.2f}")
